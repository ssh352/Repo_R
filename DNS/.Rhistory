end_date <- floor_date(end(sales), "month") - days()
cut_sales <- window(sales, start = start_date, end = end_date)
sales_zoo <- apply.monthly(cut_sales, FUN=sum)
sales_ts <- to_monthly_ts(sales_zoo)
sales_monthly[[names(shops)[i]]] <- sales_ts
sales_monthly_zoo[[names(shops)[i]]] <- sales_zoo
}
################################
##  Time series               ##
################################
library(tseries)
library(forecast)
i <- 1
plot(sales_monthly_zoo[[i]], main = names(shops)[i], cex=1, xlab=NA, ylab="Продажи (тыс.р)", type="l", col="gray", las=2)
model <- lm(as.numeric(sales_monthly_zoo[[i]]) ~ index(sales_monthly_zoo[[i]]))
abline(model, col = "green")
#Добавляем сглаженную ЛР для данных о продажах
lines(zoo(lowess(sales_monthly_zoo[[i]])$y, index(sales_monthly_zoo[[i]])), col="red")
legend("topleft", c("Продажи", "Тренд", "Сглаженные"),
col=c("gray","green","red"),
lty=c("solid","solid","solid"),
cex=1)
fit.arima <- auto.arima(cut_ts, lambda=Lw)
as.ts(sales_monthly_zoo[[i]], frequency = 12)
sales_monthly_zoo[[i]]
as.ts(sales_monthly_zoo[[i]])
as.ts(sales_monthly_zoo[[i]], start=start(sales_monthly_zoo[[i]]))
cut_zoo <- head(sales_monthly_zoo[[i]], -back)
start_ts <- as.numeric(unlist(strsplit(strtrim(start(cut_zoo),7),"-")))
back <- 12
forward <- 6
cut_zoo <- head(sales_monthly_zoo[[i]], -back)
start_ts <- as.numeric(unlist(strsplit(strtrim(start(cut_zoo),7),"-")))
cut_ts <- ts(as.numeric(cut_zoo),start=start_ts, frequency = 12)
cut_ts
as.ts(sales_monthly_zoo[[i]], start=start(sales_monthly_zoo[[i]]), frequency = 12)
as.ts(sales_monthly_zoo[[i]], start=as.numeric(unlist(strsplit(strtrim(start(sales_monthly_zoo[[i]]),7),"-"))), frequency = 12)
as.numeric(unlist(strsplit(strtrim(start(sales_monthly_zoo[[i]]),7),"-")))
ts(sales_monthly_zoo[[i]], start=as.numeric(unlist(strsplit(strtrim(start(sales_monthly_zoo[[i]]),7),"-"))), frequency = 12)
sales.monthly <- ts(sales_monthly_zoo[[i]], start=as.numeric(unlist(strsplit(strtrim(start(sales_monthly_zoo[[i]]),7),"-"))), frequency = 12)
fit.tbats
fit.tbats <- tbats(cut_zoo, lambda=Lw)
Lw <- BoxCox.lambda(cut_ts, method="loglik")
fit.tbats <- tbats(cut_zoo, lambda=Lw)
fit.arima <- auto.arima(cut_ts, lambda=Lw)
fit.arima
tsdisplay(sales.monthly)
tsdiag(fit.arima)
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(1,0,1))
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(0,1,1))
m.arima
fit.arima
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(0,2,1))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
summary(m.arima)
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(0,1,0))
summary(m.arima)
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(1,1,1))
summary(m.arima)
plot(sales.monthly)
lines(fitted(m.arima), col="green")
plot(m.arima)
plot(forecast(m.arima, h=6))
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(1,0,1))
m.arima <- arima(sales.monthly, order=c(2,1,2))
summary(m.arima)
t.value <- data.frame(ar=0, i=1, ma=0)
t.value
t.value <- data.frame(ar=0, i=1, ma=0, aic = 0)
AIC(m.arima)
t.value[2, ]
t.value
r <- 0
r <- 0
for (i in 0:3) {
for (j in 0:3) {
r <- r + 1
print(c(r, i, j))
m.arima <- arima(sales.monthly, order=c(i,1,j), seasonal = c(1,1,1))
t.value$ar <- i
t.value$i <- 1
t.value$ma <- j
t.value$aic <- AIC(m.arima)
}
}
t.value
r <- 0
for (i in 0:3) {
for (j in 0:3) {
r <- r + 1
print(c(r, i, j))
m.arima <- arima(sales.monthly, order=c(i,1,j), seasonal = c(1,1,1))
t.value[r, ] <- c(i, 1, j, AIC(m.arima))
}
}
t.value
r <- 0
for (i in 0:3) {
for (j in 0:3) {
for (k in 0:2) {
r <- r + 1
print(c(r, i, j))
m.arima <- arima(sales.monthly, order=c(i,k,j), seasonal = c(1,1,1))
t.value[r, ] <- c(i, k, j, AIC(m.arima))
}
}
}
t.value
r <- 0
for (i in 0:3) {
for (j in 0:3) {
for (k in 0:1) {
r <- r + 1
print(c(r, i, j))
m.arima <- arima(sales.monthly, order=c(i,k,j), seasonal = c(1,1,1))
t.value[r, ] <- c(i, k, j, AIC(m.arima))
}
}
}
t.value
library(dplyr)
select(t.value, aic == min(aic))
select(t.value, aic < 430)
dplyr::select(t.value, aic < 430)
dplyr::filter(t.value, aic < 430)
dplyr::filter(t.value, aic == min(aic))
r <- 0
for (i in 0:3) {
for (j in 0:3) {
for (k in 0:1) {
for (s1 in 0:2) {
for (s2 in 0:2) {
for (s3 in 0:2) {
r <- r + 1
print(c(r, i, k, j, s1, s2, s3))
m.arima <- arima(sales.monthly, order=c(i,k,j), seasonal = c(s1,s2,s3))
t.value[r, ] <- c(i, k, j, AIC(m.arima))
}
}
}
}
}
}
r <- 0
for (i in 0:3) {
for (j in 0:3) {
for (k in 0:1) {
for (s1 in 0:2) {
for (s2 in 0:2) {
for (s3 in 0:2) {
r <- r + 1
print(c(r, i, k, j, s1, s2, s3))
try(
m.arima <- arima(sales.monthly, order=c(i,k,j), seasonal = c(s1,s2,s3))
t.value[r, ] <- c(i, k, j, AIC(m.arima), s1,s2,s3)
)
}
}
}
}
}
}
r <- 0
for (i in 0:3) {
for (j in 0:3) {
for (k in 0:1) {
for (s1 in 0:2) {
for (s2 in 0:2) {
for (s3 in 0:2) {
r <- r + 1
print(c(r, i, k, j, s1, s2, s3))
try(
m.arima <- arima(sales.monthly, order=c(i,k,j), seasonal = c(s1,s2,s3))
t.value[r, ] <- c(i, k, j, AIC(m.arima), s1,s2,s3)
)
}
}
}
}
}
}
r <- 0
for (i in 0:3) {
for (j in 0:3) {
for (k in 0:1) {
for (s1 in 0:2) {
for (s2 in 0:2) {
for (s3 in 0:2) {
r <- r + 1
print(c(r, i, k, j, s1, s2, s3))
try({
m.arima <- arima(sales.monthly, order=c(i,k,j), seasonal = c(s1,s2,s3))
t.value[r, ] <- c(i, k, j, AIC(m.arima), s1,s2,s3)
})
}
}
}
}
}
}
t.value
na.omit(t.value)
t.value
filter(na.omit(t.value), aic == min(aic))
t.value <- data.frame(ar=0, i=1, ma=0, aic = 0, s1 = 0, s2 = 0, s3 = 0)
t.value
t.value <- data.frame(ar=0, i=1, ma=0, s1 = 0, s2 = 0, s3 = 0, aic = 0)
aic <- NA
aic
aic <- AIC(m.arima)
aic
r <- 0
for (i in 0:3) {
for (j in 0:3) {
for (k in 0:1) {
for (s1 in 0:2) {
for (s2 in 0:2) {
for (s3 in 0:2) {
r <- r + 1
print(c(r, i, k, j, s1, s2, s3))
aic <- NA
try({
m.arima <- arima(sales.monthly, order=c(i,k,j), seasonal = c(s1,s2,s3))
aic <- AIC(m.arima)
})
t.value[r, ] <- c(i, k, j, s1, s2, s3, aic)
}
}
}
}
}
}
filter(na.omit(t.value), aic == min(aic))
m.arima <- arima(sales.monthly, order=c(0,1,0), seasonal = c(0,2,0))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
na.omit(t.value)
filter(na.omit(t.value), aic < (min(aic) + 10))
filter(na.omit(t.value), aic < (min(aic) + 1))
m.arima <- arima(sales.monthly, order=c(0,1,2), seasonal = c(0,2,0))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
filter(na.omit(t.value), aic < (min(aic) + 2))
m.arima <- arima(sales.monthly, order=c(2,1,0), seasonal = c(0,2,0))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(1,1,0), seasonal = c(0,2,0))
lines(fitted(m.arima), col="green")
filter(na.omit(t.value), aic < (min(aic) + 3))
m.arima <- arima(sales.monthly, order=c(1,1,3), seasonal = c(0,2,0))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
filter(na.omit(t.value), aic < (min(aic) + 5))
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(0,2,0))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(2,1,1), seasonal = c(0,2,2))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(2,1,1), seasonal = c(0,2,1))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(2,1,1), seasonal = c(0,2,3))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
fitted(m.arima)
fitted(m.arima)[-1]
fitted(m.arima)[35]
fitted(m.arima)[34]
t.value <- data.frame(ar=0, i=1, ma=0, s1 = 0, s2 = 0, s3 = 0, aic = 0, v12 = 0)
r <- 0
for (i in 0:3) {
for (j in 0:3) {
for (k in 0:1) {
for (s1 in 0:2) {
for (s2 in 0:2) {
for (s3 in 0:2) {
r <- r + 1
print(c(r, i, k, j, s1, s2, s3))
aic <- NA
v12 <- NA
try({
m.arima <- arima(sales.monthly, order=c(i,k,j), seasonal = c(s1,s2,s3))
aic <- AIC(m.arima)
v12 <- fitted(m.arima)[34]
})
t.value[r, ] <- c(i, k, j, s1, s2, s3, aic, v12)
}
}
}
}
}
}
na.omit(t.value)
filter(na.omit(t.value), aic < (min(aic) + 5) and  v12 == max(v12))
filter(na.omit(t.value), aic < (min(aic) + 5) &  v12 == max(v12))
library(sqldf)
install.packages("sqldf")
library(sqldf)
res <- na.omit(t.value)
sqldf("SELECT * FROM res")
sqldf("SELECT * FROM res ORDER by aic, v12")
sqldf("SELECT * FROM res ORDER BY aic DESC, v12 DESC")
sqldf("SELECT * FROM res ORDER BY aic DESC, v12")
sqldf("SELECT * FROM res ORDER BY v12 DESC")
sqldf("SELECT * FROM res ORDER BY v12")
sales.monthly
m.arima <- arima(sales.monthly, order=c(0,0,3), seasonal = c(0,2,2))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(1,0,2), seasonal = c(0,2,2))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(1,0,3), seasonal = c(0,2,2))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(2,0,2), seasonal = c(0,2,2))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
sqldf("SELECT * FROM res ORDER BY v12")
m.arima <- arima(sales.monthly, order=c(1,0,2), seasonal = c(0,2,1))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
plot(forecast(m.arima, h=6))
sqldf("SELECT * FROM res ORDER BY aic DESC")
m.arima <- arima(sales.monthly, order=c(0,1,2), seasonal = c(0,2,0))
plot(sales.monthly)
lines(fitted(m.arima), col="green")
plot(forecast(m.arima, h=6))
lines(fitted(m.arima), col="green")
sqldf("SELECT * FROM res ORDER BY v12")
m.arima <- arima(sales.monthly, order=c(2,0,2), seasonal = c(0,2,2))
#plot(sales.monthly)
plot(forecast(m.arima, h=6))
lines(fitted(m.arima), col="green")
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(0,2,2))
m.arima <- arima(sales.monthly, order=c(2,1,2), seasonal = c(1,2,2))
sqldf("SELECT * FROM res ORDER BY v12")
sqldf("SELECT * FROM res ORDER BY v12")
m.arima <- arima(sales.monthly, order=c(1,0,3), seasonal = c(1,1,2))
plot(forecast(m.arima, h=6))
lines(fitted(m.arima), col="green")
forecast(m.arima, h=6)
x1 <- seq(sqrt(pi/3), sqrt(pi/6), by=-0.1)
y1 <- sin(x1^2)
plot(x1, y1, type="l", xlim=c(0, 1), ylim=c(0, 1))
x2 <- seq(sqrt(3)/2, 1/2, by=-0.1)
y2 <- sqrt(asin(x2))
lines(x2, y2, type="l")
y1
x1
x1
x1 <- seq(sqrt(pi/6), sqrt(pi/3), by=0.1)
y1 <- sin(x1^2)
plot(x1, y1, type="l", xlim=c(0, 1), ylim=c(0, 1))
x2 <- seq(1/2, sqrt(3)/2, by=0.1)
y2 <- sqrt(asin(x2))
lines(x2, y2, type="l")
x2
x1
y1
rbind(x1, y1, x2, y2)
sqrt(pi/2)
sqrt(pi)/2
sqrt(pi)/4
integrand <- function(x) {sin(x^2)}
integrate(integrand, lower = sqrt(pi/6), upper = sqrt(pi/3))
integrand <- function(x) {asin(x)}
integrate(integrand, lower = 1/2, upper = sqrt(3)/2)
sqrt(pi/6)
1/2
sqrt(pi/3)
sqrt(pi)/2
sqrt(pi)/3
sqrt(pi)/4
sqrt(pi)
sqrt(pi/2)
sqrt(pi/2)/3
sqrt(pi/2)/2
sqrt(pi)/2
(sqrt(pi/6)+sqrt(pi/3)) / 2 * (sqrt(3)/2 - 1/2)
(sqrt(3)/2 + 1/2) / 2 * (sqrt(pi/3) - sqrt(pi/6))
integrand <- function(x) {asin(x)}
integrate(integrand, lower = 1/2, upper = sqrt(3)/2)
integrand <- function(x) {sin(x^2)}
integrate(integrand, lower = sqrt(pi/6), upper = sqrt(pi/3))
(sqrt(3)/2 + 1/2) / 2 * (sqrt(pi/3) - sqrt(pi/6))
(sqrt(3) + 1) * (sqrt(pi/3) - sqrt(pi/6)) * 1 / 4
(sqrt(pi/6)+sqrt(pi/3)) * (sqrt(3) - 1) * 1/4
x1 <- seq(sqrt(pi/6), sqrt(pi/3), by=0.01)
y1 <- sin(x1^2)
plot(x1, y1, type="l", xlim=c(0, 1), ylim=c(0, 1))
x2 <- seq(1/2, sqrt(3)/2, by=0.1)
x2 <- seq(1/2, sqrt(3)/2, by=0.01)
y2 <- sqrt(asin(x2))
lines(x2, y2, type="l")
rbind(x1, y1, x2, y2)
(sqrt(pi/6)+sqrt(pi/3)) * (sqrt(3) - 1) * 1/4
(sqrt(pi/6)+sqrt(pi/3)) * (sqrt(3) - 1) * 1/4
(sqrt(3) + 1) * (sqrt(pi/3) - sqrt(pi/6)) * 1 / 4
s1 <- (sqrt(pi/6)+sqrt(pi/3)) * (sqrt(3) - 1) * 1/4
s2 <- (sqrt(3) + 1) * (sqrt(pi/3) - sqrt(pi/6)) * 1 / 4
s1+s2
(s1+s2)/sqrt(pi)
sqrt(pi)*3/10
sqrt(pi)*4/10
sqrt(pi)*4/12
sqrt(pi)/3
s1
1/4 * (sqrt(pi/3)*sqrt(3) - sqrt(pi/3)) + sqrt(pi/6)*sqrt(3) - sqrt(pi/6))
1/4 * (sqrt(pi/3)*sqrt(3) - sqrt(pi/3) + sqrt(pi/6)*sqrt(3) - sqrt(pi/6))
1/4 * (sqrt(pi/3)*sqrt(3) - sqrt(pi/6)*sqrt(3) + sqrt(pi/3) - sqrt(pi/6))
sqrt(pi)/4 * (2 - 1/sqrt(6))
sqrt(pi)/4 * (2 - 2/sqrt(6))
sqrt(pi)/2 * (1 - 1/sqrt(6))
integrand <- function(x, i) {
k <- 1
for (j in 1:i) {
k <- k * cos(j * x)
}
}
for (i in 1:10) {
integrate(integrand, lower = 0, upper = 2*pi)
}
for (i in 1:10) {
integrate(function(x, i) {
k <- 1
for (j in 1:i) {
k <- k * cos(j * x)
}
}
, lower = 0, upper = 2*pi)
}
integrand1 <- function(x) {
k <- 1
for (j in 1:1) {
k <- k * cos(j * x)
}
}
integrate(integrand1, lower = 0, upper = 2*pi)
integrand1 <- function(x) {
k <- 1
for (j in 1:1) {
k <- k * cos(j * x)
}
return(k)
}
integrate(integrand1, lower = 0, upper = 2*pi)
integrand2 <- function(x) {
k <- 2
for (j in 1:1) {k <- k * cos(j * x)}
return(k)
}
integrate(integrand2, lower = 0, upper = 2*pi)
integrand3 <- function(x) {
k <- 3
for (j in 1:1) {k <- k * cos(j * x)}
return(k)
}
integrate(integrand3, lower = 0, upper = 2*pi)
integrand4 <- function(x) {
k <- 4
for (j in 1:1) {k <- k * cos(j * x)}
return(k)
}
integrate(integrand4, lower = 0, upper = 2*pi)
a <- 0
for (i in 1:10) {
a <- a / (1 + i * a)
print(a)
}
a <- 1
for (i in 1:10) {
a <- a / (1 + i * a)
print(a)
}
1/7
1/10
1/7 * 1/(1+4*1/7)
a <- 1
for (i in 1:10) {
a <- a / (1 + i * a)
print(c(i, a))
}
a <- 1
for (i in 1:10) {
a <- a / (1 + i * a)
print(c(as.numeric(i), a))
}
a <- 1
for (i in 1:10) {
a <- a / (1 + i * a)
print(c(as.integer(i), a))
}
a <- 1
for (i in 1:10) {
a <- a / (1 + i * a)
print(i, a)
}
a <- 1
for (i in 1:10) {
a <- a / (1 + i * a)
print(paste(i, a))
}
1/7
1/11
1/16
